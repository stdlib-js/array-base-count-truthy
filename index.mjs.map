{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexTypedArray from '@stdlib/array-base-assert-is-complex-typed-array';\nimport isBooleanArray from '@stdlib/array-base-assert-is-booleanarray';\nimport isAccessorArray from '@stdlib/array-base-assert-is-accessor-array';\nimport resolveGetter from '@stdlib/array-base-resolve-getter';\nimport reinterpretComplex from '@stdlib/strided-base-reinterpret-complex';\nimport reinterpretBoolean from '@stdlib/strided-base-reinterpret-boolean';\n\n\n// FUNCTIONS //\n\n/**\n* Counts the number of truthy values in an indexed array.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {NonNegativeInteger} number of truthy values\n*\n* @example\n* var x = [ 0, 1, 0, 1 ];\n*\n* var n = indexed( x );\n* // returns 2\n*/\nfunction indexed( x ) {\n\tvar n;\n\tvar i;\n\n\tn = 0;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( x[ i ] ) {\n\t\t\tn += 1;\n\t\t}\n\t}\n\treturn n;\n}\n\n/**\n* Counts the number of truthy values in an accessor array.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {NonNegativeInteger} number of truthy values\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n*\n* var x = toAccessorArray( [ 0, 1, 0, 1 ] );\n*\n* var n = accessors( x );\n* // returns 2\n*/\nfunction accessors( x ) {\n\tvar get;\n\tvar n;\n\tvar i;\n\n\tget = resolveGetter( x );\n\n\tn = 0;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( get( x, i ) ) {\n\t\t\tn += 1;\n\t\t}\n\t}\n\treturn n;\n}\n\n/**\n* Counts the number of truthy values in a complex array.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {NonNegativeInteger} number of truthy values\n*\n* @example\n* import Complex128Array from '@stdlib/array-complex128';\n*\n* var x = new Complex128Array( [ 1.0, 2.0, 0.0, 0.0, 3.0, 4.0, 0.0, 0.0 ] );\n*\n* var n = complex( x );\n* // returns 2\n*/\nfunction complex( x ) {\n\tvar view;\n\tvar n;\n\tvar i;\n\n\tview = reinterpretComplex( x, 0 );\n\n\tn = 0;\n\tfor ( i = 0; i < view.length; i += 2 ) {\n\t\tif ( view[ i ] || view[ i+1 ] ) {\n\t\t\tn += 1;\n\t\t}\n\t}\n\treturn n;\n}\n\n\n// MAIN //\n\n/**\n* Counts the number of truthy values in an array.\n*\n* @param {Collection} x - input array\n* @returns {NonNegativeInteger} number of truthy values\n*\n* @example\n* var x = [ 0, 1, 0, 1, 1 ];\n*\n* var n = countTruthy( x );\n* // returns 3\n*/\nfunction countTruthy( x ) {\n\tif ( isAccessorArray( x ) ) {\n\t\tif ( isBooleanArray( x ) ) {\n\t\t\treturn indexed( reinterpretBoolean( x, 0 ) );\n\t\t}\n\t\tif ( isComplexTypedArray( x ) ) {\n\t\t\treturn complex( x );\n\t\t}\n\t\treturn accessors( x );\n\t}\n\treturn indexed( x );\n}\n\n\n// EXPORTS //\n\nexport default countTruthy;\n"],"names":["indexed","x","n","i","length","countTruthy","isAccessorArray","isBooleanArray","reinterpretBoolean","isComplexTypedArray","view","reinterpretComplex","complex","get","resolveGetter","accessors"],"mappings":";;uoBA6CA,SAASA,EAASC,GACjB,IAAIC,EACAC,EAGJ,IADAD,EAAI,EACEC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IACrBF,EAAGE,KACPD,GAAK,GAGP,OAAOA,CACR,CA+EA,SAASG,EAAaJ,GACrB,OAAKK,EAAiBL,GAChBM,EAAgBN,GACbD,EAASQ,EAAoBP,EAAG,IAEnCQ,EAAqBR,GApC5B,SAAkBA,GACjB,IAAIS,EACAR,EACAC,EAKJ,IAHAO,EAAOC,EAAoBV,EAAG,GAE9BC,EAAI,EACEC,EAAI,EAAGA,EAAIO,EAAKN,OAAQD,GAAK,GAC7BO,EAAMP,IAAOO,EAAMP,EAAE,MACzBD,GAAK,GAGP,OAAOA,CACR,CAuBUU,CAASX,GApEnB,SAAoBA,GACnB,IAAIY,EACAX,EACAC,EAKJ,IAHAU,EAAMC,EAAeb,GAErBC,EAAI,EACEC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IACrBU,EAAKZ,EAAGE,KACZD,GAAK,GAGP,OAAOA,CACR,CAwDSa,CAAWd,GAEZD,EAASC,EACjB"}